{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","rowindex","column","columnindex","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDifficulty","useEffect","_item","index","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","style","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAoCeA,EAlCI,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,OAAiD,IAAzCC,kBAAyC,MAA5B,EAA4B,EAAzBC,EAAyB,EAAzBA,mBACpCC,EAAeF,EAAa,EAAI,GAAK,YACrCG,EAAiBH,EAAa,EAAI,GAAK,YAG7C,OACI,sBAAKI,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,uBACA,qBAAKA,UAAU,mCAAf,SACI,sBAAKA,UAAU,YAAf,cAA8BL,UAGtC,sBAAKK,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,2BACA,sBAAKA,UAAU,mCAAf,UACI,uBAAMA,UAAU,YAAhB,cAA+BJ,KAC/B,sBAAKI,UAAU,8BAAf,UACI,qBACIA,UAAS,0CAAqCF,GAC9CG,QAjBD,kBAAMJ,EAAmBD,EAAa,MAmBzC,qBACII,UAAS,4CAAuCD,GAChDE,QApBC,kBAAMJ,EAAmBD,EAAa,mBCUpDM,EAdD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACb,OACI,qBAAKH,UAAU,QAAf,SAEQG,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAOD,EAAID,KAAI,SAACG,EAAQC,GACpB,OAAO,qBAAKR,UAAS,eAAUO,IAAxB,UAA0CD,EAA1C,YAAsDE,EAAtD,eCKhBC,EAXA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACvC,OACI,sBAAKb,UAAU,SAAf,UACgB,aAAXU,GAAyB,wBAAQV,UAAU,mBAAmBC,QAASY,EAA9C,sBACd,SAAXH,GAAqB,wBAAQV,UAAU,eAAeC,QAASU,EAA1C,mBACV,cAAXD,GAA0B,wBAAQV,UAAU,oBAAoBC,QAASU,EAA/C,mBACf,YAAXD,GAAwB,wBAAQV,UAAU,kBAAkBC,QAASW,EAA7C,sB,cC0BtBE,EAzBW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAKzB,OACI,sBAAKf,UAAU,qBAAf,UACI,wBAAQA,UAAU,gCAAgCC,QAJ3C,kBAAMc,EAAS,SAItB,SACI,cAAC,IAAD,CAAiBC,KAAMC,QAE3B,gCACI,wBAAQjB,UAAU,8BAA8BC,QAV/C,kBAAMc,EAAS,OAUhB,SACI,cAAC,IAAD,CAAiBC,KAAME,QAE3B,wBAAQlB,UAAU,gCAAgCC,QAV/C,kBAAMc,EAAS,SAUlB,SACI,cAAC,IAAD,CAAiBC,KAAMG,WAG/B,wBAAQnB,UAAU,iCAAiCC,QAhB3C,kBAAMc,EAAS,UAgBvB,SACI,cAAC,IAAD,CAAiBC,KAAMI,YC5B1BC,EAAkB,SAACC,EAAWC,GACvC,IADqD,IAAD,aAEhD,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAY,EAAI,IAAM,EACtDM,EAAIH,KAAKC,MAAMD,KAAKE,UAAYL,EAAY,EAAI,IAAM,EAG5D,IAFiBC,EAASM,MAAK,SAAAC,GAAI,OAAIA,EAAKN,IAAMA,GAAKM,EAAKF,IAAMA,KAG9D,MAAM,CAAN,EAAO,CAAEJ,IAAGI,SANP,CAAC,IAAD,0CAWJG,EAAa,SAACT,EAAWU,GAElC,IADA,IAAM7B,EAAS,GACN8B,EAAI,EAAGA,EAAIX,EAAWW,IAAK,CAChC,IAAMC,EAAO,IAAIC,MAAMb,GAAWc,KAAK,IACvCjC,EAAOkC,KAAKH,GAGhB/B,EAAO6B,EAAMJ,GAAGI,EAAMR,GAAK,QAC3B,IAAMc,EAAOjB,EAAgBC,EAAW,CAACU,IAEzC,OADA7B,EAAOmC,EAAKV,GAAGU,EAAKd,GAAK,OAClBrB,GCfLoC,EAAkB,CAAEf,EAAG,GAAII,EAAG,IAC9BY,EAAgBT,EAAW,GAAIQ,GAK/BE,EAAa,CAAC,IAAM,IAAK,IAAK,GAAI,IAGlCC,EAAaC,OAAOC,OAAO,CAC/BC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,SAAU,aAGCC,EAAYN,OAAOC,OAAO,CACrCM,GAAI,KACJC,MAAO,QACPC,KAAM,OACNC,KAAM,SAGFC,EAAsBX,OAAOC,OAAO,CACxC,GAAIK,EAAUG,KACd,GAAIH,EAAUC,GACd,GAAID,EAAUE,MACd,GAAIF,EAAUI,OAIVE,EAAoBZ,OAAOC,OAAO,CACtCM,GAAI,OACJC,MAAO,OACPC,KAAM,QACNC,KAAM,OAGFG,EAAQb,OAAOC,OAAO,CAC1BM,GAAI,CAAE1B,EAAG,EAAGI,GAAI,GAChBuB,MAAO,CAAE3B,EAAG,EAAGI,EAAG,GAClBwB,KAAM,CAAE5B,GAAI,EAAGI,EAAG,GAClByB,KAAM,CAAE7B,EAAG,EAAGI,EAAG,KAGf6B,OAAQC,EACNC,EAAc,WACbF,GAGLG,cAAcH,IAsJDI,MAnIf,WACE,MAA4BC,mBAAStB,GAArC,mBAAOrC,EAAP,KAAe4D,EAAf,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA4BH,mBAASpB,EAAWG,MAAhD,mBAAOnC,EAAP,KAAewD,EAAf,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCN,mBAASb,EAAUC,IAArD,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAAoCR,mBAvEZ,GAuExB,mBAAOlE,EAAP,KAAmB2E,EAAnB,KAEAC,qBAAU,WAQR,OAPAP,EACE,IAAI9B,MAAM,IAAIC,KAAK,IAAIhC,KAAI,SAACqE,EAAOC,GAAR,MAAmB,CAAElD,EAAG,GAAII,EAAG,GAAK8C,OAGjEjB,EAAQkB,aAAY,WAClBP,GAAQ,SAAAD,GAAI,OAAIA,EAAO,OAFR1B,EAAW7C,EAAa,IAIlC+D,IACN,CAAC/D,IAEJ4E,qBAAU,WACY,IAAhBR,EAAKrE,QAAgBe,IAAWgC,EAAWI,UAG3B8B,KAElBV,EAAUxB,EAAWM,aAEtB,CAACmB,IAEJ,IAcMU,EAAoBC,uBAAY,SAACC,GACrC,GAAIrE,IAAWgC,EAAWI,QACxB,OAAOuB,EAELd,EAAkBc,KAAeU,GAGrCT,EAAaS,KACZ,CAACV,EAAW3D,IAEYoE,uBAAY,SAAClF,GAClCc,IAAWgC,EAAWG,OAGtBjD,EAAa,GAAKA,EAAaA,EAAWD,QAG9C4E,EAAc3E,MACb,CAACc,EAAQd,IAEZ4E,qBAAU,WACR,IAAMQ,EAAgB,SAACC,GACrB,IAAMF,EAAezB,EAAoB2B,EAAEC,SACtCH,GAILF,EAAkBE,IAGpB,OADAI,SAASC,iBAAiB,UAAWJ,GAC9B,kBAAMG,SAASE,oBAAoB,UAAWL,MACpD,CAACH,IAEJ,IAAMD,EAAe,WACnB,IA7FiBtD,EAAWgE,EA6F5B,EAAiBtB,EAAK,GAAdxC,EAAR,EAAQA,EAAGI,EAAX,EAAWA,EACL2D,EAAQ/B,EAAMa,GACdmB,EAAc,CAClBhE,EAAGA,EAAI+D,EAAM/D,EACbI,EAAGA,EAAI2D,EAAM3D,GAEf,GAnGiBN,EAmGDnB,EAAOR,QAnGK2F,EAmGGE,GAlGpB5D,EAAI,GAAK0D,EAAS9D,EAAI,GAI/B8D,EAAS1D,EAAIN,EAAY,GAAKgE,EAAS9D,EAAIF,EAAY,GAMtC,SAACnB,EAAQmF,GAC9B,MAA0C,UAAnCnF,EAAOmF,EAAS1D,GAAG0D,EAAS9D,GAuFciE,CAAetF,EAAQqF,GAEpE,OADA7B,KACO,EAGT,IAAM+B,EAAO,YAAO1B,GACpB,GAA6C,SAAzC7D,EAAOqF,EAAY5D,GAAG4D,EAAYhE,GAAe,CACnD,IAAMmE,EAAgBD,EAAQE,MAC9BzF,EAAOwF,EAAc/D,GAAG+D,EAAcnE,GAAK,OACtC,CACL,IAAMc,EAAOjB,EAAgBlB,EAAOR,OAAR,sBAAoB+F,GAApB,CAA6BF,KACzDrF,EAAOmC,EAAKV,GAAGU,EAAKd,GAAK,OAM3B,OAJArB,EAAOqF,EAAY5D,GAAG4D,EAAYhE,GAAK,QACvCkE,EAAQG,QAAQL,GAChBvB,EAAQyB,GACR3B,EAAU5D,IACH,GAIT,OACE,sBAAKH,UAAU,MAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,QAAd,0BAEF,cAAC,EAAD,CAAYL,OAAQqE,EAAKrE,OAAQC,WAAYA,OAE/C,sBAAMI,UAAU,OAAhB,SACE,cAAC,EAAD,CAAOG,OAAQA,MAEjB,qBAAK2F,MAAO,CAAEC,QAAS,QAAvB,SACE,wBAAQ9F,QAAS,kBAAM2E,EAAa,OAApC,4BAEF,yBAAQ5E,UAAU,SAAlB,UACE,cAAC,EAAD,CACEU,OAAQA,EACRE,OA3FO,kBAAMsD,EAAUxB,EAAWK,YA4FlCpC,QA7FQ,kBAAMuD,EAAUxB,EAAWI,UA8FnCjC,UA3FU,WAEhB4C,EAAQkB,aAAY,WAClBP,GAAQ,SAAAD,GAAI,OAAIA,EAAO,OArGL,KAuGpBD,EAAUxB,EAAWG,MACrBoB,EAAQ,CAAC1B,IACT+B,EAAarB,EAAUC,IACvBa,EAAUhC,EAAW5B,EAAOR,OAAQ4C,OAqFhC,cAAC,EAAD,CAAmBxB,SAAU8D,WC7LtBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.96d68b74.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\r\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\r\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\r\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\r\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\r\n    return (\r\n        <div className=\"navigation\" >\r\n            <div className=\"navigation-item\" >\r\n                <span className=\"navigation-label\" > Length: </span >\r\n                <div className=\"navigation-item-number-container\" >\r\n                    <div className=\"num-board\" > {length}</div >\r\n                </div >\r\n            </div >\r\n            <div className=\"navigation-item\" >\r\n                <span className=\"navigation-label\" > Difficulty: </span >\r\n                <div className=\"navigation-item-number-container\" >\r\n                    <span className=\"num-board\" > {difficulty}</span >\r\n                    <div className=\"difficulty-button-container\" >\r\n                        <div\r\n                            className={`difficulty-button difficulty-up ${upVisibility}`}\r\n                            onClick={onUpDifficulty}\r\n                        ></div>\r\n                        <div\r\n                            className={`difficulty-button difficulty-down ${downVisibility}`}\r\n                            onClick={onDownDifficulty}\r\n                        ></div>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        </div >\r\n    )\r\n};\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Field = ({ fields }) => {\r\n    return (\r\n        <div className=\"field\">\r\n            {\r\n                fields.map((row, rowindex) => {\r\n                    return row.map((column, columnindex) => {\r\n                        return <div className={`dots ${column}`} key={`${rowindex}x${columnindex}y`} ></div>\r\n                    })\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Field;","import React from 'react';\r\n\r\nconst Button = ({ status, onStart, onStop, onRestart }) => {\r\n    return (\r\n        <div className=\"button\">\r\n            {status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\r\n            {status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\r\n            {status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\r\n            {status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faArrowLeft,\r\n    faArrowUp,\r\n    faArrowDown,\r\n    faArrowRight\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ManipulationPanel = ({ onChange }) => {\r\n    const onUp = () => onChange('up')\r\n    const onRight = () => onChange('right')\r\n    const onLeft = () => onChange('left')\r\n    const onDown = () => onChange('down')\r\n    return (\r\n        <div className=\"manipulation-panel\">\r\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n            <div>\r\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\r\n                    <FontAwesomeIcon icon={faArrowUp} />\r\n                </button>\r\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\r\n                    <FontAwesomeIcon icon={faArrowDown} />\r\n                </button>\r\n            </div>\r\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\r\n    while (true) {\r\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n        const conflict = excludes.some(item => item.x === x && item.y === y)\r\n\r\n        if (!conflict) {\r\n            return { x, y };\r\n        }\r\n    }\r\n}\r\n\r\nexport const initFields = (fieldSize, snake) => {\r\n    const fields = []\r\n    for (let i = 0; i < fieldSize; i++) {\r\n        const cols = new Array(fieldSize).fill('')\r\n        fields.push(cols)\r\n    }\r\n\r\n    fields[snake.y][snake.x] = 'snake'\r\n    const food = getFoodPosition(fieldSize, [snake])\r\n    fields[food.y][food.x] = 'food'\r\n    return fields\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Navigation from './components/Navigation'\nimport Field from './components/Field'\nimport Button from './components/Button'\nimport ManipulationPanel from './components/ManipulationPanel'\nimport { initFields, getFoodPosition } from './utils'\n\nconst initialPosition = { x: 17, y: 17 }\nconst initialValues = initFields(35, initialPosition)\n\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nexport const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\nlet timer = undefined\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [tick, setTick] = useState(0)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n\n  useEffect(() => {\n    setBody(\n      new Array(15).fill('').map((_item, index) => ({ x: 17, y: 17 + index })),\n    )\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe;\n  }, [difficulty])\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setFields(initFields(fields.length, initialPosition))\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  }, [direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection)\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      unsubscribe()\n      return false\n    }\n\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n    setBody(newBody)\n    setFields(fields)\n    return true\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation length={body.length} difficulty={difficulty} />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <div style={{ padding: '16px' }}>\n        <button onClick={() => handleMoving('up')}>進む</button>\n      </div>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}